(function(){const state={allGames:{},activePlatform:'global',currentPage:1,itemsPerPage:20,sort:'progress_desc',view:'grid',filters:{showDLC:true,completion:'all'}};const createSvgPlaceholder=(t,c='4A5568')=>{const w=t.split(' ');let l1='',l2='';for(const word of w){if((l1+word).length<12)l1+=`${word} `;else if((l2+word).length<12)l2+=`${word} `}const s=`<svg width="300" height="400" viewBox="0 0 300 400" xmlns="http://www.w3.org/2000/svg"><rect width="100%" height="100%" fill="#${c}"/><text x="50%" y="45%" dominant-baseline="middle" text-anchor="middle" font-family="sans-serif" font-size="28" font-weight="bold" fill="#fff">${l1.trim()}</text><text x="50%" y="55%" dominant-baseline="middle" text-anchor="middle" font-family="sans-serif" font-size="28" font-weight="bold" fill="#fff">${l2.trim()}</text></svg>`;return `data:image/svg+xml;base64,${btoa(s)}`};const generateGames=(c,p)=>{const d={psn_library:{u:'trophies',c:'2d3748'},xbox_library:{u:'G',c:'107c10'},steam_library:{u:'achievements',c:'1b2838'}}[p];return Array.from({length:c},(_,i)=>({title:`${p.slice(0,3)} Game ${i+1}`,platform:p,lastPlayed:new Date(Date.now()-Math.random()*1e11),hasDLC:Math.random()>0.8,prog:Math.floor(Math.random()*101),total:d.u==='G'?1000:Math.floor(Math.random()*40)+20,unit:d.u,earned:0})).map(g=>{g.earned=g.unit==='G'?Math.round(g.prog/100*1000/5)*5:Math.round(g.total*g.prog/100);g.imgUrl=createSvgPlaceholder(g.title,d.c);g.platinum=g.prog>80&&Math.random()>0.5;return g})};const el={tabs:document.querySelectorAll('.tab-button'),completionFilter:document.getElementById('completion_filter'),dlcToggle:document.getElementById('dlc_toggle'),sortDropdown:document.getElementById('sort_dropdown'),viewGridBtn:document.getElementById('view_grid_btn'),viewListBtn:document.getElementById('view_list_btn'),gameCount:document.getElementById('game_count_display'),grid:document.getElementById('grid_view'),list:document.getElementById('list_view'),pagination:document.getElementById('pagination_controls'),prevBtn:document.getElementById('prev_page_btn'),nextBtn:document.getElementById('next_page_btn'),pageIndicator:document.getElementById('page_indicator'),st1:document.getElementById('stats-title-1'),sv1:document.getElementById('stats-value-1'),st2:document.getElementById('stats-title-2'),sv2:document.getElementById('stats-value-2'),st3:document.getElementById('stats-title-3'),sv3:document.getElementById('stats-value-3'),st4:document.getElementById('stats-title-4'),sv4:document.getElementById('stats-value-4'),svUnearned:document.getElementById('stats-value-unearned'),svPerDay:document.getElementById('stats-value-per-day'),svViews:document.getElementById('stats-value-views'),rankingDisplay:document.getElementById('ranking-display'),svGlobalRank:document.getElementById('stats-value-global-rank'),svCountryRank:document.getElementById('stats-value-country-rank'),recommendationsContainer:document.getElementById('recommendations-container')};const getRank=(p)=>{if(p===100)return{l:'S',c:'#facc15'};if(p>=90)return{l:'A',c:'#a855f7'};if(p>=70)return{l:'B',c:'#3b82f6'};if(p>=40)return{l:'C',c:'#22c55e'};if(p>=10)return{l:'D',c:'#f97316'};if(p>0)return{l:'E',c:'#ef4444'};return{l:'-',c:'#6b7280'}};const createGridCard=(g)=>{const r=getRank(g.prog);return`<div class="bg-gray-800/70 rounded-lg group overflow-hidden flex flex-col text-sm shadow-lg transition-transform hover:scale-105"><div class="relative"><img src="${g.imgUrl}" alt="${g.title}" class="w-full object-cover aspect-[3/4]"><div class="absolute top-2 right-2 w-9 h-9 flex items-center justify-center rounded-full bg-gray-900/80 border-2" style="border-color:${r.c}"><span class="text-xl font-bold" style="color:${r.c}">${r.l}</span></div></div><div class="p-3 flex-grow flex flex-col"><p class="font-bold truncate mb-2">${g.title}</p><div class="mt-auto pt-2"><div class="flex justify-between text-xs text-gray-400 mb-1"><span>${g.earned.toLocaleString()}/${g.total.toLocaleString()} ${g.unit}</span><span>${g.prog}%</span></div><div class="w-full bg-gray-700 rounded-full h-1.5"><div class="h-1.5 rounded-full" style="width:${g.prog}%;background-color:${r.c}"></div></div></div></div></div>`};const createListRow=(g)=>{const r=getRank(g.prog);return`<div class="bg-gray-800/70 p-3 rounded-md flex items-center space-x-4 text-sm hover:bg-gray-700/80"><img src="${g.imgUrl}" alt="${g.title}" class="w-10 h-14 object-cover rounded-sm shrink-0"><p class="font-bold flex-grow truncate">${g.title}</p><div class="w-56 hidden md:block"><div class="flex justify-between text-xs text-gray-400 mb-1"><span>${g.earned.toLocaleString()}/${g.total.toLocaleString()} ${g.unit}</span><span>${g.prog}%</span></div><div class="w-full bg-gray-700 h-1.5 rounded-full"><div class="h-1.5 rounded-full" style="width:${g.prog}%;background-color:${r.c}"></div></div></div><p class="hidden lg:block w-40 text-right text-gray-400 text-xs">${g.lastPlayed.toLocaleDateString()}<span class="text-gray-500 block">Last Played</span></p><div class="flex w-9 h-9 items-center justify-center rounded-full border-2 shrink-0" style="border-color:${r.c}"><span class="text-xl font-bold" style="color:${r.c}">${r.l}</span></div></div>`};function updateStatsUI(platform){const games=(platform==='global')?Object.values(state.allGames).flat():state.allGames[platform]||[];const s={totalEarned:0,totalPossible:0,played:games.length,completed:games.filter(g=>g.prog===100).length,avgComp:0,views:18432,globalRank:Math.floor(Math.random()*15e3)+5e3,countryRank:Math.floor(Math.random()*500)+50};if(games.length>0){games.forEach(g=>{s.totalEarned+=g.earned;s.totalPossible+=g.total});s.unearned=s.totalPossible-s.totalEarned;s.avgComp=Math.round(games.reduce((sum,g)=>sum+g.prog,0)/s.played);s.perDay=(s.totalEarned/730).toFixed(2)}const pName=platform==='global'?'Global':platform.slice(0,3).toUpperCase();el.st1.textContent=platform==='xbox_library'?`${pName} Gamerscore`:`${pName} Score`;el.sv1.textContent=s.totalEarned.toLocaleString();el.st2.textContent='Games Played';el.sv2.textContent=s.played.toLocaleString();el.st3.textContent='Games Completed';el.sv3.textContent=s.completed.toLocaleString();el.st4.textContent='Avg Completion';el.sv4.textContent=`${s.avgComp}%`;el.svUnearned.textContent=s.unearned.toLocaleString();el.svPerDay.textContent=s.perDay;el.svViews.textContent=s.views.toLocaleString();if(platform==='global'){el.rankingDisplay.classList.add('hidden')}else{el.rankingDisplay.classList.remove('hidden');el.svGlobalRank.textContent=`#${s.globalRank.toLocaleString()}`;el.svCountryRank.textContent=`#${s.countryRank.toLocaleString()}`}}function render(){let games=(state.activePlatform==='global')?Object.values(state.allGames).flat():state.allGames[state.activePlatform]||[];const f=state.filters;if(f.completion==='100')games=games.filter(g=>g.prog===100);else if(f.completion==='plat_no_100')games=games.filter(g=>g.platinum&&g.prog<100);else if(f.completion==='in_progress')games=games.filter(g=>g.prog>0&&g.prog<100);if(!f.showDLC)games=games.filter(g=>!g.hasDLC);games.sort((a,b)=>{switch(state.sort){case 'progress_desc':return b.prog-a.prog;case 'progress_asc':return a.prog-b.prog;case 'name_asc':return a.title.localeCompare(b.title);case 'last_played_desc':return b.lastPlayed.getTime()-a.lastPlayed.getTime();default:return 0}});const tI=games.length,tP=Math.ceil(tI/state.itemsPerPage)||1;state.currentPage=Math.min(state.currentPage,tP);const pG=games.slice((state.currentPage-1)*state.itemsPerPage,state.currentPage*state.itemsPerPage);el.grid.innerHTML=pG.map(createGridCard).join('');el.list.innerHTML=pG.map(createListRow).join('');el.gameCount.textContent=`Showing ${pG.length} of ${tI} games`;el.pageIndicator.textContent=`Page ${state.currentPage} of ${tP}`;el.prevBtn.disabled=(state.currentPage===1);el.nextBtn.disabled=(state.currentPage===tP);el.pagination.style.display=tP>1?'flex':'none'}function updateViewUI(){const isGrid=state.view==='grid';el.viewGridBtn.classList.toggle('active',isGrid);el.viewListBtn.classList.toggle('active',!isGrid);el.grid.style.display=isGrid?'grid':'none';el.list.style.display=isGrid?'none':'flex'}
const createRecommendationCard=(game,reason)=>{const gameImg=game.imgUrl||createSvgPlaceholder(game.title);return`<div class="swiper-slide group"><div class="bg-gray-800 rounded-lg shadow-lg overflow-hidden h-full flex flex-col"><img src="${gameImg}" alt="${game.title}" class="w-full h-40 object-cover group-hover:scale-105 transition-transform duration-300"><div class="p-4 flex-grow flex flex-col"><h3 class="font-bold text-lg mb-1">${game.title}</h3><p class="text-sm text-purple-400 italic mb-4">${reason}</p><div class="mt-auto"><a href="game_page.html" class="block w-full text-center bg-gray-700 hover:bg-purple-600 text-white font-semibold py-2 rounded-lg">View Game</a></div></div></div></div>`};function generateAndRenderRecommendations(){if(!el.recommendationsContainer)return;const recs=[];const allUserGames=Object.values(state.allGames).flat();const completedGame=allUserGames.find(g=>g.prog===100);if(completedGame){const recommendation=allUserGames.find(g=>g.genre===completedGame.genre&&g.prog<10&&g.title!==completedGame.title);if(recommendation)recs.push({game:recommendation,reason:`Because you completed ${completedGame.title}`})}const backlogGame=allUserGames.find(g=>g.prog<5&&g.prog>0&&g.difficulty>7);if(backlogGame)recs.push({game:backlogGame,reason:"A gem from your backlog!"});const popularGamesToAdd=allUserGames.sort((a,b)=>b.views-a.views).slice(0,3);popularGamesToAdd.forEach(g=>recs.push({game:g,reason:"A critically acclaimed classic"}));const uniqueRecs=Array.from(new Set(recs.map(r=>r.game.title))).map(title=>recs.find(r=>r.game.title===title));if(uniqueRecs.length>0){el.recommendationsContainer.innerHTML=uniqueRecs.slice(0,5).map(r=>createRecommendationCard(r.game,r.reason)).join('')}else{el.recommendationsContainer.innerHTML='<p class="text-gray-500">Play more to get recommendations!</p>'}new Swiper('.recommendation-swiper',{slidesPerView:1,spaceBetween:20,navigation:{nextEl:'.swiper-button-next',prevEl:'.swiper-button-prev'},breakpoints:{640:{slidesPerView:2},1024:{slidesPerView:3}}})}
function init(){state.allGames.psn_library=generateGames(68,'psn_library');state.allGames.xbox_library=generateGames(45,'xbox_library');state.allGames.steam_library=generateGames(120,'steam_library');el.tabs.forEach(t=>{t.addEventListener('click',e=>{state.activePlatform=e.currentTarget.dataset.platform;state.currentPage=1;el.tabs.forEach(b=>b.classList.remove('active'));e.currentTarget.classList.add('active');updateStatsUI(state.activePlatform);render()})});el.completionFilter.addEventListener('change',e=>{state.filters.completion=e.target.value;state.currentPage=1;render()});el.dlcToggle.addEventListener('change',e=>{state.filters.showDLC=e.target.checked;state.currentPage=1;render()});el.sortDropdown.addEventListener('change',e=>{state.sort=e.target.value;render()});el.viewGridBtn.addEventListener('click',()=>{if(state.view!=='grid'){state.view='grid';updateViewUI()}});el.viewListBtn.addEventListener('click',()=>{if(state.view!=='list'){state.view='list';updateViewUI()}});el.prevBtn.addEventListener('click',()=>{if(state.currentPage>1){state.currentPage--;render()}});el.nextBtn.addEventListener('click',()=>{const tP=Math.ceil((state.activePlatform==='global'?Object.values(state.allGames).flat():state.allGames[state.activePlatform]).length/state.itemsPerPage);if(state.currentPage<tP){state.currentPage++;render()}});document.querySelector('.tab-button[data-platform="global"]').classList.add('active');updateStatsUI('global');updateViewUI();render();generateAndRenderRecommendations()}
document.addEventListener('DOMContentLoaded',init);})();